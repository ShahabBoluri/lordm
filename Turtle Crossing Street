from turtle import Turtle
STARTING_POSITION = (0, -280)
MOVE_DISTANCE = 10
FINISH_LINE_Y = 280


class Player(Turtle):
    def __init__(self):
        super().__init__()
        self.shape("turtle")
        self.setheading(90)
        self.pu()
        self.goto(STARTING_POSITION)

    def up(self):
        if self.ycor() < 280:
            self.forward(MOVE_DISTANCE)

    def rearenge(self):
        self.clear()
        self.goto(STARTING_POSITION)





from turtle import Turtle
FONT = ("Courier", 24, "normal")


class Scoreboard(Turtle):
    def __init__(self):
        super().__init__()
        self.hideturtle()
        self.pu()
        self.score = 0
        self.goto(-270, 250)
        self.write(f"Level: {self.score}", font=FONT)

    def increse_score(self):
        self.clear()
        self.score += 1
        self.write(f"Level: {self.score}", font=FONT)

    def lose(self):
        self.goto(-90,0)
        self.write("Game over", font=FONT)

from turtle import Turtle
import random
COLORS = ["red", "orange", "yellow", "green", "blue", "purple"]
STARTING_MOVE_DISTANCE = 5
MOVE_INCREMENT = 10


class CarManager(Turtle):
    def __init__(self):
        super().__init__()
        self.shape("square")
        self.shapesize(stretch_len=2)
        self.color(random.choice(COLORS))
        self.pu()
        self.setheading(-180)

    def move(self):
        self.forward(MOVE_INCREMENT)



from turtle import Turtle

class LineOfRoad(Turtle):
    def __init__(self):
        super().__init__()
        self.hideturtle()
        self.pu()
        self.goto(300,240)
        self.pd()
        self.goto(-350,240)
        self.goto(-350,-240)
        self.goto(300,-240)

import time
from turtle import Screen
from player import Player
from car_manager import CarManager
from scoreboard import Scoreboard
from line import LineOfRoad
from random import randint
import time


screen = Screen()
screen.setup(width=600, height=600)
screen.tracer(0)

player = Player()
screen.listen()
screen.onkey(player.up, "Up")

scoreboard = Scoreboard()
line = LineOfRoad()

cars = []
i = 0

speed_of_cars = 0.1

game_is_on = True
while game_is_on:
    time.sleep(speed_of_cars)
    screen.update()

    i += 1

    if i % 5 == 0:
        car = CarManager()
        y_position = 220 - randint(0, 9)*50
        car.goto(280, y_position)
        cars.append(car)
    for item in cars:
        if item.xcor() < -315:
            cars.remove(item)

    for item in cars:
        item.move()

    for item in cars:
        if player.distance(item) < 15:
            scoreboard.lose()
            game_is_on = False
        elif player.ycor() >= 280:
            scoreboard.increse_score()
            player.rearenge()
            speed_of_cars *= 0.8




screen.exitonclick()
